$date
  Sun Apr 25 20:24:33 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module shift_reg_8bit_tb $end
$var reg 8 ! i[7:0] $end
$var reg 8 " o[7:0] $end
$var reg 1 # i_shift_in $end
$var reg 1 $ clk $end
$var reg 1 % enable $end
$var reg 2 & sel[1:0] $end
$scope module shift_reg_8bit_0 $end
$var reg 8 ' i_8bit[7:0] $end
$var reg 1 ( i_shift_in_8bit $end
$var reg 2 ) sel_8bit[1:0] $end
$var reg 1 * clock_8bit $end
$var reg 1 + enable_8bit $end
$var reg 8 , o_8bit[7:0] $end
$var reg 8 - values_8bit[7:0] $end
$var reg 1 . inshift0 $end
$var reg 1 / inshift1 $end
$scope module shift_reg_0 $end
$var reg 4 0 i[3:0] $end
$var reg 1 1 i_shift_in $end
$var reg 2 2 sel[1:0] $end
$var reg 1 3 clock $end
$var reg 1 4 enable $end
$var reg 4 5 o[3:0] $end
$var reg 4 6 values[3:0] $end
$upscope $end
$scope module shift_reg_1 $end
$var reg 4 7 i[3:0] $end
$var reg 1 8 i_shift_in $end
$var reg 2 9 sel[1:0] $end
$var reg 1 : clock $end
$var reg 1 ; enable $end
$var reg 4 < o[3:0] $end
$var reg 4 = values[3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b11000000 !
b11000000 "
0#
1$
1%
b11 &
b11000000 '
0(
b11 )
1*
1+
b11000000 ,
b11000000 -
0.
0/
b1100 0
01
b11 2
13
14
b1100 5
b1100 6
b0000 7
08
b11 9
1:
1;
b0000 <
b0000 =
#1000000
b11000011 !
b11000011 "
b11000011 '
b11000011 ,
b11000011 -
b0011 7
b0011 <
b0011 =
#2000000
b11111111 !
b01100001 "
b10 &
b11111111 '
b10 )
b01100001 ,
b01100001 -
b1111 0
b10 2
b0110 5
b0110 6
b1111 7
b10 9
b0001 <
b0001 =
#3000000
b00000000 !
b00110000 "
b00000000 '
b00110000 ,
b00110000 -
b0000 0
b0011 5
b0011 6
b0000 7
b0000 <
b0000 =
#4000000
b11111111 !
b00011000 "
b11111111 '
b00011000 ,
b00011000 -
1/
b1111 0
b0001 5
b0001 6
b1111 7
18
b1000 <
b1000 =
#5000000
b00000000 !
b00001100 "
b00000000 '
b00001100 ,
b00001100 -
b0000 0
b0000 5
b0000 6
b0000 7
b1100 <
b1100 =
#6000000
b00 &
b00 )
0/
b00 2
08
b00 9
#7000000
b11111111 !
b00000110 "
b10 &
b11111111 '
b10 )
b00000110 ,
b00000110 -
b1111 0
b10 2
b1111 7
b10 9
b0110 <
b0110 =
#8000000
b00000000 !
b00000011 "
b00000000 '
b00000011 ,
b00000011 -
b0000 0
b0000 7
b0011 <
b0011 =
#9000000
b11111111 !
b00000001 "
b11111111 '
b00000001 ,
b00000001 -
b1111 0
b1111 7
b0001 <
b0001 =
#10000000
b00000000 !
b00000000 "
b00000000 '
b00000000 ,
b00000000 -
b0000 0
b0000 7
b0000 <
b0000 =
#11000000
b11000001 !
b11000001 "
b11 &
b11000001 '
b11 )
b11000001 ,
b11000001 -
b1100 0
b11 2
b1100 5
b1100 6
b0001 7
b11 9
b0001 <
b0001 =
#12000000
1#
1(
1.
1/
11
18
#13000000
0#
b00 &
0(
b00 )
0.
0/
01
b00 2
08
b00 9
#14000000
b10000101 "
1#
b01 &
1(
b01 )
b10000101 ,
b10000011 -
1/
b01 2
b1000 5
b1000 6
18
b01 9
b0101 <
b0101 =
#15000000
