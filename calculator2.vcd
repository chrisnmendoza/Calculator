$date
  Thu May 20 21:59:17 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module calculator_tb $end
$var reg 8 ! i[7:0] $end
$var reg 1 " clock $end
$scope module calculator1 $end
$var reg 8 # i[7:0] $end
$var reg 1 $ clk $end
$var reg 8 % regout1[7:0] $end
$var reg 8 & regout2[7:0] $end
$var reg 8 ' regwrite[7:0] $end
$var reg 1 ( branch $end
$var reg 1 ) we_signal $end
$var reg 2 * regin1[1:0] $end
$var reg 2 + regin2[1:0] $end
$var reg 2 , ws_signal[1:0] $end
$var reg 8 - aluoutput[7:0] $end
$var reg 1 . rtype $end
$var reg 8 / immediateoutput[7:0] $end
$var reg 1 0 clk_signal $end
$scope module regfile $end
$var reg 2 1 rs1[1:0] $end
$var reg 2 2 rs2[1:0] $end
$var reg 1 3 clk $end
$var reg 2 4 ws[1:0] $end
$var reg 8 5 wd[7:0] $end
$var reg 1 6 we $end
$var reg 8 7 rd1[7:0] $end
$var reg 8 8 rd2[7:0] $end
$var reg 8 9 i1[7:0] $end
$var reg 8 : i2[7:0] $end
$var reg 8 ; i3[7:0] $end
$var reg 8 < i4[7:0] $end
$var reg 8 = o1[7:0] $end
$var reg 8 > o2[7:0] $end
$var reg 8 ? o3[7:0] $end
$var reg 8 @ o4[7:0] $end
$var reg 1 A clocksig $end
$scope module reg_1 $end
$var reg 8 B i[7:0] $end
$var reg 1 C clk $end
$var reg 8 D o[7:0] $end
$upscope $end
$scope module reg_2 $end
$var reg 8 E i[7:0] $end
$var reg 1 F clk $end
$var reg 8 G o[7:0] $end
$upscope $end
$scope module reg_3 $end
$var reg 8 H i[7:0] $end
$var reg 1 I clk $end
$var reg 8 J o[7:0] $end
$upscope $end
$scope module reg_4 $end
$var reg 8 K i[7:0] $end
$var reg 1 L clk $end
$var reg 8 M o[7:0] $end
$upscope $end
$upscope $end
$scope module alu1 $end
$var reg 8 N a[7:0] $end
$var reg 8 O b[7:0] $end
$var reg 2 P opfield[1:0] $end
$var reg 8 Q o[7:0] $end
$var reg 1 R eq $end
$var reg 2 S temp[1:0] $end
$var reg 8 T sum[7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000 !
0"
b00000000 #
0$
b00000000 %
b00000000 &
b1111UUUU '
0(
1)
bUU *
bUU +
bUU ,
b00000000 -
1.
b00000000 /
00
b00 1
b00 2
03
bUU 4
b1111UUUU 5
16
b00000000 7
b00000000 8
b00000000 9
b00000000 :
b00000000 ;
b00000000 <
b00000000 =
b00000000 >
b00000000 ?
b00000000 @
0A
b00000000 B
0C
b00000000 D
b00000000 E
0F
b00000000 G
b00000000 H
0I
b00000000 J
b00000000 K
0L
b00000000 M
b00000000 N
b00000000 O
b00 P
b00000000 Q
0R
b00 S
b00000000 T
#1000000
b01000111 !
1"
b01000111 #
1$
b00000000 '
b11 ,
0.
b00000111 /
10
b01 2
13
b11 4
b00000000 5
1A
1C
1F
1I
1L
b01 P
b10 S
#2000000
b01010001 !
0"
b01010001 #
0$
b00000111 '
b00000001 /
00
b01 1
b00 2
03
b00000111 5
0A
0C
0F
0I
0L
#3000000
b01011010 !
1"
b01011010 #
1$
b00000001 %
b00000001 '
b01 ,
b11111010 /
10
b10 2
13
b01 4
b00000001 5
b00000001 7
b00000001 :
b00000001 >
1A
1C
b00000001 E
1F
b00000001 G
1I
1L
b00000001 N
#4000000
b01001000 !
0"
b01001000 #
0$
b00000000 %
b11111010 '
b11111000 /
00
b00 1
03
b11111010 5
b00000000 7
0A
0C
0F
0I
0L
b00000000 N
#5000000
b01100001 !
1"
b01100001 #
1$
b11111000 %
b11111000 '
b10 ,
b00000001 /
10
b10 1
b00 2
13
b10 4
b11111000 5
b11111000 7
b11111000 ;
b11111000 ?
1A
1C
1F
b11111000 H
1I
b11111000 J
1L
b11111000 N
#6000000
b01000011 !
0"
b01000011 #
0$
b00000000 %
b00000001 '
b00000011 /
00
b00 1
03
b00000001 5
b00000000 7
0A
0C
0F
0I
0L
b00000000 N
#7000000
b01110101 !
1"
b01110101 #
1$
b00000011 %
b00000001 &
b00000011 '
b11 ,
b00000101 /
10
b11 1
b01 2
13
b11 4
b00000011 5
b00000011 7
b00000001 8
b00000011 <
b00000011 @
1A
1C
1F
1I
b00000011 K
1L
b00000011 M
b00000011 N
b00000001 O
#8000000
b01101011 !
0"
b01101011 #
0$
b11111000 %
b11111000 &
b00000101 '
b11111011 /
00
b10 1
b10 2
03
b00000101 5
b11111000 7
b11111000 8
0A
0C
0F
0I
0L
b11111000 N
b11111000 O
#9000000
