$date
  Thu May  6 15:26:52 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module registerfile_tb $end
$var reg 2 ! rs1[1:0] $end
$var reg 2 " rs2[1:0] $end
$var reg 2 # ws[1:0] $end
$var reg 8 $ rd1[7:0] $end
$var reg 8 % rd2[7:0] $end
$var reg 8 & wd[7:0] $end
$var reg 1 ' we $end
$var reg 1 ( clk $end
$scope module registerfile1 $end
$var reg 2 ) rs1[1:0] $end
$var reg 2 * rs2[1:0] $end
$var reg 1 + clk $end
$var reg 2 , ws[1:0] $end
$var reg 8 - wd[7:0] $end
$var reg 1 . we $end
$var reg 8 / rd1[7:0] $end
$var reg 8 0 rd2[7:0] $end
$var reg 8 1 i1[7:0] $end
$var reg 8 2 i2[7:0] $end
$var reg 8 3 i3[7:0] $end
$var reg 8 4 i4[7:0] $end
$var reg 8 5 o1[7:0] $end
$var reg 8 6 o2[7:0] $end
$var reg 8 7 o3[7:0] $end
$var reg 8 8 o4[7:0] $end
$var reg 1 9 clocksig $end
$scope module reg_1 $end
$var reg 8 : i[7:0] $end
$var reg 1 ; clk $end
$var reg 8 < o[7:0] $end
$upscope $end
$scope module reg_2 $end
$var reg 8 = i[7:0] $end
$var reg 1 > clk $end
$var reg 8 ? o[7:0] $end
$upscope $end
$scope module reg_3 $end
$var reg 8 @ i[7:0] $end
$var reg 1 A clk $end
$var reg 8 B o[7:0] $end
$upscope $end
$scope module reg_4 $end
$var reg 8 C i[7:0] $end
$var reg 1 D clk $end
$var reg 8 E o[7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00 !
b01 "
b00 #
bUUUUUUUU $
bUUUUUUUU %
b00000000 &
0'
0(
b00 )
b01 *
0+
b00 ,
b00000000 -
0.
bUUUUUUUU /
bUUUUUUUU 0
b00000000 1
b00000000 2
b00000000 3
b00000000 4
bUUUUUUUU 5
bUUUUUUUU 6
bUUUUUUUU 7
bUUUUUUUU 8
U9
b00000000 :
U;
bUUUUUUUU <
b00000000 =
U>
bUUUUUUUU ?
b00000000 @
UA
bUUUUUUUU B
b00000000 C
UD
bUUUUUUUU E
#1000000
b00000001 &
1'
1(
1+
b00000001 -
1.
b00000001 1
b00000001 5
b00000000 6
b00000000 7
b00000000 8
19
b00000001 :
1;
b00000001 <
1>
b00000000 ?
1A
b00000000 B
1D
b00000000 E
#2000000
0'
0(
0+
0.
#3000000
b00000001 $
b00000000 %
b00000000 &
1(
1+
b00000000 -
b00000001 /
b00000000 0
#4000000
